<Activity mc:Ignorable="sap sap2010" x:Class="ZSD_POS_1389_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ucas="clr-namespace:UiPath.Core.Activities.SAP;assembly=UiPath.UiAutomation.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dic_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_str_Sociedad" Type="InArgument(x:String)" />
    <x:Property Name="out_dt_zmm_pol_4517_1" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1132,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ZSD_POS_1389_1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ZSD_POS_1389_1" sap:VirtualizedContainerService.HintSize="496,466" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;------&gt;TransacciÃ³n ZMM_POL_4517_1 &quot;+in_str_Sociedad]" />
    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_dt_zmm_pol_4517_1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[New DataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(in_str_Sociedad.ToString.Trim, &quot;\b[a-zA-Z]{4}\b&quot;)]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,321" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[in_str_Sociedad]" />
          <If Condition="[File.Exists(in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Existe archivo&quot;]" />
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_zmm_pol_4517_1]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Hoja1" WorkbookPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;seleccionando columnas&quot;]" />
                <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[out_dt_zmm_pol_4517_1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From p In out_dt_zmm_pol_4517_1.Select()
Group p By PS=p.Item("Ped Abiert").ToString,
PI=p.Item("Ped Impo").ToString,
F=p.Item("Factura").ToString Into Group
Select Group(0)).ToArray.CopyToDataTable().AsEnumerable.CopyToDataTable.DefaultView.ToTable(False, "Ped Abiert", "Ped Impo", "Factura")]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'saplogon.exe SAP'" sap:VirtualizedContainerService.HintSize="670,1812" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="c14b638e825b7ce807e665ce5d392e2a" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="636,1665" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ucas:CallTransaction DisplayName="Call Transaction ZSD_POS_1389_1" sap:VirtualizedContainerService.HintSize="574,160" sap2010:WorkflowViewState.IdRef="CallTransaction_1" Transaction="[in_dic_Config(&quot;ZMM_POL_4517_1&quot;).ToString.Trim]">
                        <ucas:CallTransaction.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="0d891ad3-8379-412b-b9ee-9eec3c1fd82c" InformativeScreenshot="00f04abdd4ba24cad5c7fde70fedfe21" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ucas:CallTransaction.Target>
                      </ucas:CallTransaction>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="574,141" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Ingreso parametros&quot;]" />
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into sociedad compradora" sap:VirtualizedContainerService.HintSize="574,155" sap2010:WorkflowViewState.IdRef="TypeInto_3" SimulateType="True" Text="AGUC">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b0518e85-95b6-42b1-85e6-d7679dab4e7d" InformativeScreenshot="431b80a91079cdc57bddfc7f98f0ce85" Selector="&lt;sap id='usr/subPANTALLA:ZMPLOMM4517_1:0110/ctxtSO_BUKCO-LOW' tooltip='Sociedad' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into sociedad vendedora" sap:VirtualizedContainerService.HintSize="574,155" sap2010:WorkflowViewState.IdRef="TypeInto_4" SimulateType="True" Text="[in_str_Sociedad]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b0518e85-95b6-42b1-85e6-d7679dab4e7d" InformativeScreenshot="60d7107c24668beece9e4522a3b0a511" Selector="&lt;sap id='usr/subPANTALLA:ZMPLOMM4517_1:0110/ctxtSO_BUKVE-LOW' tooltip='Sociedad' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into sociedad vendedora" sap:VirtualizedContainerService.HintSize="574,155" sap2010:WorkflowViewState.IdRef="TypeInto_5" SimulateType="True" Text="[Date.Now.AddDays(-210).ToString(&quot;dd.MM.yyyy&quot;)]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b0518e85-95b6-42b1-85e6-d7679dab4e7d" InformativeScreenshot="7489fb8bba282bd182d7cd37445c5294" Selector="&lt;sap id='usr/subPANTALLA:ZMPLOMM4517_1:0110/ctxtSO_BEDAT-LOW' tooltip='Fecha de pedido' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into sociedad vendedora" sap:VirtualizedContainerService.HintSize="574,155" sap2010:WorkflowViewState.IdRef="TypeInto_6" SimulateType="True" Text="[Date.Now.ToString(&quot;dd.MM.yyyy&quot;)]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b0518e85-95b6-42b1-85e6-d7679dab4e7d" InformativeScreenshot="2eea1e0ff1563463a1b003f05869054e" Selector="&lt;sap id='usr/subPANTALLA:ZMPLOMM4517_1:0110/ctxtSO_BEDAT-HIGH' tooltip='Fecha de pedido' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button  Continuar'" sap:VirtualizedContainerService.HintSize="574,107" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8e637478-f201-40d3-b542-14a40d4d9a70" InformativeScreenshot="2a03b4c98c94db47ce3237939088bbeb" Selector="&lt;sap id='usr/subPANTALLA:ZMPLOMM4517_1:0110/chkPA_HISTO' type='GuiCheckBox' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button  Continuar'" sap:VirtualizedContainerService.HintSize="574,107" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8e637478-f201-40d3-b542-14a40d4d9a70" InformativeScreenshot="cf80d481e7251b39bbbe40a72a5d63fc" Selector="&lt;sap text='Buscar InformaciÃ³n' tooltip='Buscar InformaciÃ³n   (F8)' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <Pick sap:VirtualizedContainerService.HintSize="574,99" sap2010:WorkflowViewState.IdRef="Pick_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <PickBranch sap:VirtualizedContainerService.HintSize="562,1687" sap2010:WorkflowViewState.IdRef="PickBranch_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <PickBranch.Trigger>
                            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'GridViewColumn  Material'" sap:VirtualizedContainerService.HintSize="334,107" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bc99e561-09d8-4d90-a0ea-48ecf934263c" InformativeScreenshot="61a74f8ac1349420583d6bae0d20b8f2" Selector="&lt;sap colName='BUKR*' id='usr/cntlCC_CONTAINER/shellcont/shell' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                          </PickBranch.Trigger>
                          <Sequence sap:VirtualizedContainerService.HintSize="512,1381" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:00">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Sequence guardar" sap:VirtualizedContainerService.HintSize="752,3290" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Boolean" Name="bool_ArchivoXLSX" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'GridViewCell  AGUC'" sap:VirtualizedContainerService.HintSize="690,107" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                                      <ui:UiElementExists.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="38c8d688-ba01-46d1-843c-0e21e1fba63c" InformativeScreenshot="439748150f622e364bcbcf6a694edc2a" Selector="&lt;sap colName='BUKRS_COMP' id='usr/cntlCC_CONTAINER/shellcont/shell' tableRow='0' /&gt;" WaitForReady="COMPLETE">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                        </ui:Target>
                                      </ui:UiElementExists.Target>
                                    </ui:UiElementExists>
                                    <ucas:ClickToolbarButton ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" AlterIfDisabled="True" DisplayName="Click Toolbar Button 'Menubar  mbar'" sap:VirtualizedContainerService.HintSize="690,160" sap2010:WorkflowViewState.IdRef="ClickToolbarButton_3" Item="Exportar/Hoja de cÃ¡lculo">
                                      <ucas:ClickToolbarButton.Items>
                                        <scg:List x:TypeArguments="x:String" Capacity="32">
                                          <x:String>Detalles</x:String>
                                          <x:String>Clasific.ascendente</x:String>
                                          <x:String>Clasific.descendente</x:String>
                                          <x:String>Buscar</x:String>
                                          <x:String>Fijar filtro...</x:String>
                                          <x:String>Fijar filtro.../Fijar filtro...</x:String>
                                          <x:String>Fijar filtro.../Borrar filtros</x:String>
                                          <x:String>Total</x:String>
                                          <x:String>Total/Total</x:String>
                                          <x:String>Total/Promedio</x:String>
                                          <x:String>Total/MÃ­nimo</x:String>
                                          <x:String>Total/MÃ¡ximo</x:String>
                                          <x:String>Impr.</x:String>
                                          <x:String>Exportar/Hoja de cÃ¡lculo</x:String>
                                          <x:String>Exportar/Tratam.textos</x:String>
                                          <x:String>Exportar/Fich.local</x:String>
                                          <x:String>Exportar/Enviar</x:String>
                                          <x:String>Exportar/Office</x:String>
                                          <x:String>Exportar/AnÃ¡l.ABC</x:String>
                                          <x:String>Exportar/Download HTML</x:String>
                                          <x:String>Modificar disposiciÃ³n...</x:String>
                                          <x:String>Visual.grÃ¡fico</x:String>
                                          <x:String>DocumentaciÃ³n usuario</x:String>
                                          <x:String>Marcar Todo</x:String>
                                          <x:String>Desmarcar Todo</x:String>
                                        </scg:List>
                                      </ucas:ClickToolbarButton.Items>
                                      <ucas:ClickToolbarButton.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff4e54ac-8104-488c-825d-1b13946e9fbd" InformativeScreenshot="96e2892e2b2234a40aa6aa8ef3c85aa4" Selector="&lt;sap id='usr/cntlCC_CONTAINER/shellcont/shell' /&gt;" WaitForReady="COMPLETE">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                        </ui:Target>
                                      </ucas:ClickToolbarButton.Target>
                                    </ucas:ClickToolbarButton>
                                    <Sequence sap:VirtualizedContainerService.HintSize="690,81" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'saplogon.exe Guardar'" sap:VirtualizedContainerService.HintSize="488,107" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                                        <ui:UiElementExists.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="01677115-56d8-4ccf-961c-ca673bfe82f2" InformativeScreenshot="f77bae9b9260e97080e987302c0fd385" Selector="&lt;wnd app='saplogon.exe' title='Seleccionar cÃ¡lculo costes tabla' idx='*' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:UiElementExists.Target>
                                      </ui:UiElementExists>
                                      <ucas:ClickToolbarButton ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" AlterIfDisabled="True" DisplayName="Click Toolbar Button 'ComboBox  G_LISTBOX'" sap:VirtualizedContainerService.HintSize="488,160" sap2010:WorkflowViewState.IdRef="ClickToolbarButton_2" Item="Excel (en formato XXL hasta ahora)">
                                        <ucas:ClickToolbarButton.Items>
                                          <scg:List x:TypeArguments="x:String" Capacity="8">
                                            <x:String>Excel (en formato XXL hasta ahora)</x:String>
                                            <x:String>Excel (en formato XLSX Office 2007)</x:String>
                                            <x:String>Excel(en formato MHTML)</x:String>
                                            <x:String>Excel (en formato MHTML para 2000/97)</x:String>
                                            <x:String>OpenOffice (en form.OpenDocument 2.0)</x:String>
                                            <x:String>Excel (en formato XML Office 2003)</x:String>
                                            <x:String>Formato XML interno de SAP</x:String>
                                            <x:String xml:space="preserve"> </x:String>
                                          </scg:List>
                                        </ucas:ClickToolbarButton.Items>
                                        <ucas:ClickToolbarButton.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="eb62e5e1-213d-4254-8665-5ac93e5e6e14" InformativeScreenshot="62490f5e1b9871c1cb88941c3098d229" Selector="&lt;wnd app='saplogon.exe' title='Seleccionar cÃ¡lculo costes tabla' idx='*' /&gt;&lt;sap id='usr/cmbG_LISTBOX' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ucas:ClickToolbarButton.Target>
                                      </ucas:ClickToolbarButton>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button Continuar'" sap:VirtualizedContainerService.HintSize="488,107" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8d5f185-94d4-4280-97e1-be58ab2189db" InformativeScreenshot="39d8fc18056b1e68789696df88c848d9" Selector="&lt;wnd app='saplogon.exe' title='Seleccionar cÃ¡lculo costes tabla' idx='*' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click sin subtotales" sap:VirtualizedContainerService.HintSize="488,107" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8d5f185-94d4-4280-97e1-be58ab2189db" InformativeScreenshot="7751f071d9b56ce25732fdbc65e4144d" Selector="&lt;wnd app='saplogon.exe' title='InformaciÃ³n' idx='*' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click tabla" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8d5f185-94d4-4280-97e1-be58ab2189db" InformativeScreenshot="daf8ee3bb8a8e51796795842bd0a6dc7" Selector="&lt;wnd app='saplogon.exe' title='Exportar objeto lista a XXL' idx='*' /&gt;&lt;sap id='usr/subSUBSCREEN_STEPLOOP:SAPLSPO5:0150/sub:SAPLSPO5:0150/radSPOPLI-SELFLAG[0,0]' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click tabla" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8d5f185-94d4-4280-97e1-be58ab2189db" InformativeScreenshot="39d8fc18056b1e68789696df88c848d9" Selector="&lt;wnd app='saplogon.exe' title='Exportar objeto lista a XXL' idx='*' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click microsoft excel" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8d5f185-94d4-4280-97e1-be58ab2189db" InformativeScreenshot="00688682b0dc511b5ba03dce3a7c169c" Selector="&lt;wnd app='saplogon.exe' title='Exportar objeto lista a XXL' idx='*' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Label  Clv.ref.2'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                                        <ui:UiElementExists.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="85bc16c1-6b3c-454e-8ab8-09ad28a0439f" InformativeScreenshot="1edb2ec4fde081a6b01baa3867ab6016" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;uia name='A1' /&gt;" TimeoutMS="500000" WaitForReady="COMPLETE" />
                                        </ui:UiElementExists.Target>
                                      </ui:UiElementExists>
                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="488,759" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,531" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="str_Texto" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'A1'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="GetValue_1">
                                              <ui:GetValue.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5f5433b4-39a5-4d0b-9d32-a4e8792b74e4" InformativeScreenshot="c06cdd7e5e78340e4e9c54c08c7dcc78" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;uia name='A1' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                                              </ui:GetValue.Target>
                                              <ui:GetValue.Value>
                                                <OutArgument x:TypeArguments="x:String">[str_Texto]</OutArgument>
                                              </ui:GetValue.Value>
                                            </ui:GetValue>
                                            <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[String.IsNullOrEmpty(str_Texto)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="388,273" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                                              <ui:InterruptibleDoWhile.Body>
                                                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'A1'" sap:VirtualizedContainerService.HintSize="334,107" sap2010:WorkflowViewState.IdRef="GetValue_2">
                                                  <ui:GetValue.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5f5433b4-39a5-4d0b-9d32-a4e8792b74e4" InformativeScreenshot="c06cdd7e5e78340e4e9c54c08c7dcc78" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;uia name='A1' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                                                  </ui:GetValue.Target>
                                                  <ui:GetValue.Value>
                                                    <OutArgument x:TypeArguments="x:String">[str_Texto]</OutArgument>
                                                  </ui:GetValue.Value>
                                                </ui:GetValue>
                                              </ui:InterruptibleDoWhile.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InterruptibleDoWhile>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap:VirtualizedContainerService.HintSize="450,268" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[exception.Message]" />
                                                <Throw Exception="[New Exception(&quot;El archivo de la transacciÃ³n ZDSD_POO_1356_1 no pudo ser guardado&quot;)]" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <Delay Duration="00:00:07" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'excel.exe Plantilla'" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="12fdf6d198e0b97029832fa009c6b71a" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;">
                                        <ui:WindowScope.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,331" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'D2'" sap:VirtualizedContainerService.HintSize="388,155" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="%[k(shift)][k(f12)]">
                                                <ui:TypeInto.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a7f946d-534d-4770-b7ba-d0ecd1fc4f39" InformativeScreenshot="1edb2ec4fde081a6b01baa3867ab6016" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;uia name='A1' /&gt;" WaitForReady="COMPLETE">
                                                    <ui:Target.TimeoutMS>
                                                      <InArgument x:TypeArguments="x:Int32" />
                                                    </ui:Target.TimeoutMS>
                                                  </ui:Target>
                                                </ui:TypeInto.Target>
                                              </ui:TypeInto>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:WindowScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:WindowScope>
                                    </Sequence>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="690,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Guardando archivo &quot;+in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_1200_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                                    <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into guardar" EmptyField="True" sap:VirtualizedContainerService.HintSize="690,155" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx[k(enter)]&quot;]">
                                      <ui:TypeInto.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a7f946d-534d-4770-b7ba-d0ecd1fc4f39" InformativeScreenshot="2e54b7fbe0873876c38263513218b84f" Selector="&lt;wnd app='*' title='Guardar*' /&gt;&lt;wnd aaname='Nombre*' cls='ComboBox' /&gt;" TimeoutMS="300000" WaitForReady="COMPLETE" />
                                      </ui:TypeInto.Target>
                                    </ui:TypeInto>
                                    <Delay DisplayName="Delay exista archivo" Duration="00:00:07" sap:VirtualizedContainerService.HintSize="690,25" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists archivo por material" Exists="[bool_ArchivoXLSX]" sap:VirtualizedContainerService.HintSize="690,52" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" PathType="File">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:PathExists>
                                    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not bool_ArchivoXLSX]" DisplayName="Do While archivo por material" sap:VirtualizedContainerService.HintSize="690,52" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                                      <ui:InterruptibleDoWhile.Body>
                                        <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists archivo por material" Exists="[bool_ArchivoXLSX]" sap:VirtualizedContainerService.HintSize="654,115" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" PathType="File" />
                                      </ui:InterruptibleDoWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleDoWhile>
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean" />
                              </ui:RetryScope.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:RetryScope>
                            <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process Excel" sap:VirtualizedContainerService.HintSize="450,133" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Finalizando la descarga de archivo&quot;]" />
                            <ui:ReadRange Range="{x:Null}" AddHeaders="False" DataTable="[out_dt_zmm_pol_4517_1]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="450,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Hoja1" WorkbookPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                            <Sequence DisplayName="Sequence renombrando columnas" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="int_Indice" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Renombando columnas&quot;]" />
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="[int_Indice]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[(From z In out_dt_zmm_pol_4517_1.rows(0).ItemArray.AsEnumerable&#xA;Select z).ToList]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="546,505" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign quitar espacio en los encabezados" sap:VirtualizedContainerService.HintSize="484,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[out_dt_zmm_pol_4517_1.rows(0).item(int_Indice)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[currentItem.ToString.Trim]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[(From z In out_dt_zmm_pol_4517_1.rows(0).ItemArray.AsEnumerable&#xA;Where z.ToString.Trim.Equals(currentItem.ToString.Trim)&#xA;Select z).Count&gt;1]" DisplayName="If validando que la columna este duplicada" sap:VirtualizedContainerService.HintSize="484,272" sap2010:WorkflowViewState.IdRef="If_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Assign renombrando columna" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[out_dt_zmm_pol_4517_1.rows(0).item(int_Indice)]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[currentItem.ToString.Trim+" "+int_Indice.ToString.Trim]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_3" Path="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                              <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[out_dt_zmm_pol_4517_1]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Hoja1" WorkbookPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_zmm_pol_4517_1]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Hoja1" WorkbookPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;ZMM_POL_4517_1_&quot;+in_str_Sociedad.ToString.Trim+&quot;.xlsx&quot;]" />
                            </Sequence>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;seleccionando columnas&quot;]" />
                            <Assign sap:VirtualizedContainerService.HintSize="450,83" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[out_dt_zmm_pol_4517_1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From p In out_dt_zmm_pol_4517_1.Select()
Group p By PS=p.Item("Ped Abiert").ToString,
PI=p.Item("Ped Impo").ToString,
F=p.Item("Factura").ToString Into Group
Select Group(0)).ToArray.CopyToDataTable().AsEnumerable.CopyToDataTable.DefaultView.ToTable(False, "Ped Abiert", "Ped Impo", "Factura")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <TryCatch sap2010:Annotation.AnnotationText="Tome una captura de pantalla del estado actual de la pantalla para facilitar la depuraciÃ³n." DisplayName="Try taking screenshot" sap:VirtualizedContainerService.HintSize="450,124" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Captura de pantalla por error" DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[in_dic_Config("ExScreenshotsFolderPath").ToString]</InArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Log message (Screenshot not taken)" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Warn" Message="[&quot;Failed to take screenshot: &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source+&quot; At Source: &quot;+Exception.Source]" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Button  Continuar'" sap:VirtualizedContainerService.HintSize="450,107" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8e637478-f201-40d3-b542-14a40d4d9a70" InformativeScreenshot="7751f071d9b56ce25732fdbc65e4144d" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </PickBranch>
                        <PickBranch sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="PickBranch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <PickBranch.Trigger>
                            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'GridViewColumn  Material'" sap:VirtualizedContainerService.HintSize="334,107" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bc99e561-09d8-4d90-a0ea-48ecf934263c" InformativeScreenshot="e053d5b1eb01ec594bc8789c9d68d296" Selector="&lt;sap text='Para los datos ingresados no existen pedidos abiertos' idx='1' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                          </PickBranch.Trigger>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Para los datos ingresados no existen pedidos abiertos&quot;]" />
                        </PickBranch>
                      </Pick>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:WindowScope>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,229" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[in_str_Sociedad]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>