<Activity mc:Ignorable="sap sap2010" x:Class="ArchivoWareHouse" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugade="clr-namespace:UiPath.GSuite.Activities.Drive.Enums;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dic_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_str_ContraseñaGsuite" Type="InArgument(x:String)" />
    <x:Property Name="in_str_UsuarioGsuite" Type="InArgument(x:String)" />
    <x:Property Name="out_dt_ZMM_POL_1200" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1133,2600</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ArchivoWareHouse_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Google.Apis.Drive.v3.Data</x:String>
      <x:String>Google.Apis.Requests</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Drive</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Google.Apis</AssemblyReference>
      <AssemblyReference>Google.Apis.Core</AssemblyReference>
      <AssemblyReference>Google.Apis.Drive.v3</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ArchivoWareHouse" sap:VirtualizedContainerService.HintSize="614,2535" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="552,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;------&gt;Ware House&quot;]" />
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="552,1527" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:10">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" BrowserItemFriendlyName="{x:Null}" BrowserItemFullPath="{x:Null}" BrowserItemId="{x:Null}" BrowserParentItemId="{x:Null}" BrowserRuntimeItemFriendlyName="{x:Null}" BrowserRuntimeItemFullPath="{x:Null}" BrowserRuntimeItemId="{x:Null}" BrowserRuntimeParentItemId="{x:Null}" BucketId="{x:Null}" BucketName="{x:Null}" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Connector="{x:Null}" ContinueOnError="{x:Null}" CredentialID="{x:Null}" CredentialSecret="{x:Null}" Folder="{x:Null}" ManualRuntimeItemFullPath="{x:Null}" SecureCredentialSecret="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" AuthenticationType="ServiceAccountKey" BucketInputMode="Browse" ConfigLocation="PropertiesPanel" DataStoreLocation="DISK" DisplayName="GSuite Application Scope cargando carpeta archivos" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="510,1352" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyPath="[in_dic_Config(&quot;RutaInput&quot;).ToString.Trim+&quot;g-pry-uc-013-plninventarios-adc9c5e76097.json&quot;]" KeyType="JSON" OAuthClient="UIPATH" Password="[in_str_ContraseñaGsuite]" RuntimeItemInputMode="Browse" ServiceAccountEmail="[in_str_UsuarioGsuite]" Services="Unselected" UseConnectionService="False">
            <uga:GSuiteApplicationScope.AuthenticationScopes>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="16">
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.readonly</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.file</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.metadata.readonly</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.appdata</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.metadata</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.photos.readonly</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets.readonly</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets</InArgument>
              </scg:List>
            </uga:GSuiteApplicationScope.AuthenticationScopes>
            <uga:GSuiteApplicationScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="GSuiteScope" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="476,1062" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_IDArchivoDiaAnterior" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_IDArchivoDiaAnterior]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <uga:FindFiles ContinueOnError="{x:Null}" DriveTarget="{x:Null}" Result="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" FirstResultId="[str_IDArchivoDiaAnterior]" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="FindFiles_1" MaxResults="50" SearchExpression="[&quot;name = 'Inventory CUSA &quot;+Date.Now.ToString(&quot;MMM dd yyyy&quot;)+&quot;.xlsx'&quot;]" SupportsTeamDrives="False" />
                  <If Condition="[String.IsNullOrEmpty(str_IDArchivoDiaAnterior)]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uga:FindFiles ContinueOnError="{x:Null}" DriveTarget="{x:Null}" Result="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" FirstResultId="[str_IDArchivoDiaAnterior]" sap:VirtualizedContainerService.HintSize="713,80" sap2010:WorkflowViewState.IdRef="FindFiles_2" MaxResults="50" SearchExpression="[&quot;name = 'Inventory CUSA &quot;+Date.Now.AddDays(-1).ToString(&quot;MMM dd yyyy&quot;)+&quot;.xlsx'&quot;]" SupportsTeamDrives="False" />
                        <If Condition="[String.IsNullOrEmpty(str_IDArchivoDiaAnterior)]" sap:VirtualizedContainerService.HintSize="713,250" sap2010:WorkflowViewState.IdRef="If_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <uga:FindFiles ContinueOnError="{x:Null}" DriveTarget="{x:Null}" Result="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" FirstResultId="[str_IDArchivoDiaAnterior]" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="FindFiles_3" MaxResults="50" SearchExpression="[&quot;name = 'Inventory CUSA &quot;+Date.Now.AddDays(-2).ToString(&quot;MMM dd yyyy&quot;)+&quot;.xlsx'&quot;]" SupportsTeamDrives="False" />
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[str_IDArchivoDiaAnterior]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[str_IDArchivoDiaAnterior]" />
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Descargando archivo&quot;]" />
                  <uga:DownloadFile ContinueOnError="{x:Null}" DriveTarget="{x:Null}" FileFriendlyName="{x:Null}" AuthScopesInvalid="False" DisplayName="Download File" FileId="[str_IDArchivoDiaAnterior]" FileIdSelectionMode="Browse" sap:VirtualizedContainerService.HintSize="434,148" sap2010:WorkflowViewState.IdRef="DownloadFile_1" LocalPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;Inventory CUSA &quot;+Date.Now.ToString(&quot;MMM dd yyyy&quot;)+&quot;.xlsx&quot;]" SupportsTeamDrives="False" />
                  <Delay DisplayName="De0lay" Duration="00:00:10" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="Delay_1" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;LEyendo archivo&quot;]" />
                </Sequence>
              </ActivityAction>
            </uga:GSuiteApplicationScope.Body>
            <uga:GSuiteApplicationScope.BucketFullPathBackup>
              <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="{x:Null}">
                <usau:BackupSlot.BackupValues>
                  <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                </usau:BackupSlot.BackupValues>
              </usau:BackupSlot>
            </uga:GSuiteApplicationScope.BucketFullPathBackup>
            <uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
              <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="{x:Null}">
                <usau:BackupSlot.BackupValues>
                  <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                </usau:BackupSlot.BackupValues>
              </usau:BackupSlot>
            </uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uga:GSuiteApplicationScope>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="552,676" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:00">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence sap:VirtualizedContainerService.HintSize="496,501" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="0" Visible="False" WorkbookPath="[in_dic_Config(&quot;RutaOutput&quot;).ToString.Trim+&quot;Inventory CUSA &quot;+Date.Now.ToString(&quot;MMM dd yyyy&quot;)+&quot;.xlsx&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[out_dt_ZMM_POL_1200]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A2" SheetName="ZMM_POL_1200" />
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_dt_ZMM_POL_1200]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[out_dt_ZMM_POL_1200.AsEnumerable.CopyToDataTable.DefaultView.ToTable(False,"Plnt","SLoc","Material","Material Number","Batch","Case","AUn",
"MovAvgPrice","VALUE*Case","TotValue","Laboratory/design office")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_dt_ZMM_POL_1200]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From z In out_dt_ZMM_POL_1200
Where Not String.IsNullOrEmpty(z("Material").ToString.Trim)
Select z).copytoDatatable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,408" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Escribiendo archivo&quot;]" />
                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[out_dt_ZMM_POL_1200]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Ware House" WorkbookPath="[in_str_NombreArchivo]" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
  </Sequence>
</Activity>